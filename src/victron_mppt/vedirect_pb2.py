# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: vedirect.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0evedirect.proto\"\x9a\x01\n\x06\x64\x65vice\x12\x12\n\nproduct_id\x18\x01 \x01(\t\x12\x10\n\x08\x66irmware\x18\x02 \x01(\t\x12\x0e\n\x06serial\x18\x03 \x01(\t\x12\r\n\x05\x65rror\x18\x04 \x01(\r\x12\r\n\x05state\x18\x05 \x01(\r\x12\x12\n\nmppt_state\x18\x07 \x01(\r\x12\x15\n\rday_max_power\x18\x06 \x01(\x02\x12\x11\n\tday_power\x18\x08 \x01(\x02\"E\n\x0csolar_output\x12\x0f\n\x07\x63urrent\x18\x01 \x01(\x02\x12\x0f\n\x07voltage\x18\x02 \x01(\x02\x12\x13\n\x0bpanel_power\x18\x03 \x01(\x02\"\x15\n\x07request\x12\n\n\x02id\x18\x01 \x01(\x05\x32Z\n\nsolar_mppt\x12$\n\rGetDeviceInfo\x12\x08.request\x1a\x07.device\"\x00\x12&\n\tGetOutput\x12\x08.request\x1a\r.solar_output\"\x00\x62\x06proto3')



_DEVICE = DESCRIPTOR.message_types_by_name['device']
_SOLAR_OUTPUT = DESCRIPTOR.message_types_by_name['solar_output']
_REQUEST = DESCRIPTOR.message_types_by_name['request']
device = _reflection.GeneratedProtocolMessageType('device', (_message.Message,), {
  'DESCRIPTOR' : _DEVICE,
  '__module__' : 'vedirect_pb2'
  # @@protoc_insertion_point(class_scope:device)
  })
_sym_db.RegisterMessage(device)

solar_output = _reflection.GeneratedProtocolMessageType('solar_output', (_message.Message,), {
  'DESCRIPTOR' : _SOLAR_OUTPUT,
  '__module__' : 'vedirect_pb2'
  # @@protoc_insertion_point(class_scope:solar_output)
  })
_sym_db.RegisterMessage(solar_output)

request = _reflection.GeneratedProtocolMessageType('request', (_message.Message,), {
  'DESCRIPTOR' : _REQUEST,
  '__module__' : 'vedirect_pb2'
  # @@protoc_insertion_point(class_scope:request)
  })
_sym_db.RegisterMessage(request)

_SOLAR_MPPT = DESCRIPTOR.services_by_name['solar_mppt']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _DEVICE._serialized_start=19
  _DEVICE._serialized_end=173
  _SOLAR_OUTPUT._serialized_start=175
  _SOLAR_OUTPUT._serialized_end=244
  _REQUEST._serialized_start=246
  _REQUEST._serialized_end=267
  _SOLAR_MPPT._serialized_start=269
  _SOLAR_MPPT._serialized_end=359
# @@protoc_insertion_point(module_scope)
